
services:
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    command: [ "start-dev", "--import-realm" ]
    restart: unless-stopped
    environment:
      KC_FEATURES: docker
      KC_HOSTNAME_STRICT: false
      KC_DB: postgres
      KC_DB_URL: "jdbc:postgresql://keycloak_db:5432/keycloak"
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_METRICS_ENABLED: true
      KC_LOG_LEVEL: INFO
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: keycloak
      KC_HEALTH_ENABLED: true
    ports:
      - 8080:8080
      - 8443:8443
    volumes:
      - ./test.json:/opt/keycloak/data/import/realm.json:ro
    depends_on:
      keycloak_db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "echo will-do-healthcheck"]
      interval: 3s
      timeout: 3s
      start_period: 1s
      retries: 10
      
  keycloak_db:
    image: timescaledev/timescaledb-ha:pg15.2-ts2.10.3
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "keycloak" ]
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - keycloak-data:/var/lib/postgresql/data    
  
  registry:
    image: ghcr.io/distribution/distribution:edge
    ports:
      - 5001:5000
    volumes:
      - registry-data:/var/lib/registry
      - ./config.yml:/etc/distribution/config.yml  # Mount the config.yml file
      - ./adapterConfig/:/registry
    depends_on:
      keycloak:
        condition: service_healthy

volumes:
  keycloak-data: {}
  registry-data: {}